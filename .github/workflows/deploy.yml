name: Deploy

on:
  push:
    branches:
      - master

jobs:
  Build-Test-Deploy:
    runs-on: ubuntu-latest

    strategy:
        matrix:
          node-version: [10.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Setup PHP
        uses: shivammathur/setup-php@v1
        with:
          php-version: '7.4'
          extensions: curl, mbstring, openssl, pdo, sqlite3, xml
          coverage: none

      - name: Build
        run: |
            composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
            yarn install
            yarn prod

      - name: Test
        run: |
            composer test
            yarn test

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: 206.189.85.59
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "God is good, all the time!"

            # Install Node.js &
            curl -sL https://deb.nodesource.com/setup_12.x | bash -
            apt-get install -y nodejs

            # Install Yarn
            curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add
            echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
            apt-get update && apt-get install -y yarn

            cd /root/hackdawg.com

            # Reset everything
            git fetch --all && git checkout master && git reset --hard && git pull
            rm -rf .env && SECRET_PASSPHRASE=${{ secrets.SECRET_PASSPHRASE }} sh deploy/decrypt_secret.sh

            # Stop running containers, remove local images
            docker-compose -f ./deploy/docker-compose.yml down --rmi=local --remove-orphans
            docker image prune -f

            # Build frontend
            yarn && yarn prod

            ## Here we go...
            make copy-hosts@production
            make deploy@production
