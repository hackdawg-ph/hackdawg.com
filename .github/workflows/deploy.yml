name: Deploy

on:
  push:
    branches:
      - master

jobs:
  Build-Test-Deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: hackdawg
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Setup PHP
        uses: shivammathur/setup-php@v1
        with:
          php-version: '7.4'
          extensions: curl, mbstring, openssl, pdo, mysql, xml
          coverage: none

      - name: Copy environment file
        run: cp ./deploy/secrets/.env.testing .env.testing

      - name: Install dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist

      - name: Build frontend
        run: |
          yarn install
          yarn prod

      - name: Execute tests
        run: |
          composer test
          yarn test
        env:
          DB_PORT: ${{ job.services.mysql.ports[3306] }}

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
          script: |
            echo "God is good, all the time!"

            # Bootstrap environment
            export SECRET_PASSPHRASE=${{ secrets.SECRET_PASSPHRASE }}

            # Install linux utilities
            apt-get update -y
            apt-get install -y make

            # Install Node.js &
            curl -sL https://deb.nodesource.com/setup_12.x | bash -
            apt-get install -y nodejs

            # Install Yarn
            curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add
            echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
            apt-get update && apt-get install -y yarn

            cd /root/hackdawg.com || exit

            # Reset everything
            git fetch --all && git checkout master && git reset --hard && git pull
            rm -rf .env && sh deploy/decrypt_secret.sh

            # Copy bash aliases
            rm -f /root/.bash_aliases
            cp ./deploy/.bash_aliases /root
            source /root/.bash_aliases

            # Stop running containers, remove local images
            docker-compose -f ./deploy/docker-compose.yml down --rmi=local --remove-orphans
            docker image prune -f

            # Build frontend
            yarn && yarn prod

            # Here we go...
            make copy-hosts@production
            make deploy@production

